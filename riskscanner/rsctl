#!/bin/bash
action=$1
target=$2
args=$@

RS_BASE=/opt/
export COMPOSE_HTTP_TIMEOUT=180

source ${RS_BASE}/riskscanner/.env

compose_files="-f docker-compose-core.yml"
if [ ${RS_EXTERNAL_MYSQL} = "false" ]; then
   compose_files="${compose_files} -f docker-compose-mysql.yml"
fi

function usage() {
   echo "RiskScanner 控制脚本"
   echo
   echo "Usage: "
   echo "  ./rsctl [COMMAND] [ARGS...]"
   echo "  ./rsctl --help"
   echo
   echo "Commands: "
   echo "  status    查看 RiskScanner 服务运行状态"
   echo "  start     启动 RiskScanner 服务"
   echo "  stop      停止 RiskScanner 服务"
   echo "  restart   重启 RiskScanner 服务"
   echo "  reload    重新加载 RiskScanner 服务"
   echo "  uninstall 卸载 RiskScanner 服务"
   echo "  version   查看 RiskScanner 版本信息"
}

function status() {
   echo
   cd ${RS_BASE}/riskscanner; docker-compose ${compose_files} ps
}
function start() {
   echo
   cd ${RS_BASE}/riskscanner; docker-compose ${compose_files} start ${target}
}
function stop() {
   echo
   cd ${RS_BASE}/riskscanner; docker-compose ${compose_files} stop ${target}
}
function restart() {
   echo
   cd ${RS_BASE}/riskscanner; docker-compose ${compose_files} restart ${target}
}
function reload() {
   echo
   cd ${RS_BASE}/riskscanner; docker-compose ${compose_files} up -d
}
function uninstall() {
   echo
   cd ${RS_BASE}/riskscanner; docker-compose ${compose_files} down -v ${target}
}
function version() {
   echo
   cat ${RS_BASE}/riskscanner/conf/version
}

function main() {
    case "${action}" in
      status)
         status
         ;;
      start)
         start
         ;;
      stop)
         stop
         ;;
      restart)
         restart
         ;;
      reload)
         reload
         ;;
      uninstall)
         uninstall
         ;;
      version)
         version
         ;;
      help)
         usage
         ;;
      --help)
         usage
         ;;
      *)
         echo "不支持的参数，请使用 help 或 --help 参数获取帮助"
    esac
}
main